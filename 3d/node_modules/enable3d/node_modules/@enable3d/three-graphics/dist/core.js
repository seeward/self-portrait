"use strict";
/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThreeGraphics = void 0;
const THREE = require("@enable3d/three-wrapper/dist/index");
const cameras_1 = require("./plugins/cameras");
const index_1 = require("@enable3d/ammo-physics/dist/index");
class ThreeGraphics {
    constructor(threeGraphicsConfig = {}) {
        this.threeGraphicsConfig = threeGraphicsConfig;
        const { anisotropy = 1, camera = cameras_1.default.Perspective({ z: 25, y: 5 }), antialias = false, usePhysics = true, renderer } = threeGraphicsConfig;
        this.textureAnisotropy = anisotropy;
        this.camera = camera;
        this.scene = new THREE.Scene();
        // this.renderer.physicallyCorrectLights = true
        this.renderer = renderer || new THREE.WebGLRenderer({ antialias });
        // see https://threejs.org/docs/#examples/en/loaders/GLTFLoader
        // this.renderer.outputEncoding = sRGBEncoding
        // shadow
        this.renderer.shadowMap.enabled = true;
        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;
        // enable cache
        this.cache = THREE.Cache;
        this.cache.enabled = true;
        if (usePhysics) {
            if (typeof Ammo !== 'undefined')
                this.physics = new index_1.AmmoPhysics(this.scene, threeGraphicsConfig);
            else
                console.log('[enable3d]: Are you sure you included ammo.js?');
        }
    }
}
exports.ThreeGraphics = ThreeGraphics;
//# sourceMappingURL=core.js.map