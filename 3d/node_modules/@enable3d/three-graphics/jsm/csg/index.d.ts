/**
 * @author       Evan Wallace (http://madebyevan.com/))
 * @copyright    Copyright (c) 2011 Evan Wallace
 * @license      MIT license
 *
 * @author       manthrax (https://github.com/manthrax)
 *
 * @author       Jiro-Digital (https://github.com/Jiro-Digital)
 * @copyright    Copyright (c) 2020 Jiro Digital Ltd
 * @license      {@link https://github.com/Jiro-Digital/three-csg-ts/blob/master/LICENSE|MIT}
 *
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
import { Mesh } from 'three';
/**
 * CSG wrapper for enable3d
 *
 * The CSG library does not support buffer geometries.
 * Means we first make sure we are dealing with geometries
 * and then transform them back to buffer geometries.
 */
declare class CSGWrapper {
    static toGeometry(meshA: Mesh, meshB: Mesh): void;
    static toBufferGeometry(meshC: Mesh): void;
    static union(meshA: Mesh, meshB: Mesh): Mesh;
    static subtract(meshA: Mesh, meshB: Mesh): Mesh;
    static intersect(meshA: any, meshB: any): Mesh;
    static doCSG(meshA: any, meshB: any, operation: 'union' | 'subtract' | 'intersect'): Mesh;
}
export { CSGWrapper as CSG };
//# sourceMappingURL=index.d.ts.map