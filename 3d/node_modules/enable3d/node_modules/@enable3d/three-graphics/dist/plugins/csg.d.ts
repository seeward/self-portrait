/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
import { Mesh, Scene } from '@enable3d/three-wrapper/dist/index';
import Transform from './transform';
/**
 * CSG wrapper for enable3d
 *
 * The CSG library does not support buffer geometries.
 * Means we first make sure we are dealing with geometries
 * and then transform them back to buffer geometries.
 */
export default class CSGWrapper {
    private scene;
    private transform;
    constructor(scene: Scene, transform: Transform);
    private toGeometry;
    private toBufferGeometry;
    union(meshA: Mesh, meshB: Mesh): Mesh;
    subtract(meshA: Mesh, meshB: Mesh): Mesh;
    intersect(meshA: any, meshB: any): Mesh;
    private doCSG;
}
//# sourceMappingURL=csg.d.ts.map