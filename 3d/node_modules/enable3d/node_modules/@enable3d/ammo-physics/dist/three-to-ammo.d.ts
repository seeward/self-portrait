export namespace TYPE {
    const BOX: string;
    const CYLINDER: string;
    const SPHERE: string;
    const CAPSULE: string;
    const CONE: string;
    const HULL: string;
    const HACD: string;
    const VHACD: string;
    const MESH: string;
    const HEIGHTFIELD: string;
}
export namespace FIT {
    const ALL: string;
    const MANUAL: string;
}
export namespace HEIGHTFIELD_DATA_TYPE {
    const short: string;
    const float: string;
}
export function createCollisionShapes(vertices: any, matrices: any, indexes: any, matrixWorld: any, options?: {}): (Ammo.btCylinderShape | null)[];
export function createBoxShape(vertices: any, matrices: any, matrixWorld: any, options?: {}): Ammo.btBoxShape;
export function createCylinderShape(vertices: any, matrices: any, matrixWorld: any, options?: {}): Ammo.btCylinderShape | null;
export function createCapsuleShape(vertices: any, matrices: any, matrixWorld: any, options?: {}): Ammo.btCapsuleShape | null;
export function createConeShape(vertices: any, matrices: any, matrixWorld: any, options?: {}): Ammo.btConeShape | null;
export function createSphereShape(vertices: any, matrices: any, matrixWorld: any, options?: {}): Ammo.btSphereShape;
export function createHullShape(vertices: any, matrices: any, matrixWorld: any, options?: {}): Ammo.btConvexHullShape | null;
export function createHACDShapes(vertices: any, matrices: any, indexes: any, matrixWorld: any, options?: {}): Ammo.btConvexHullShape[];
export function createVHACDShapes(vertices: any, matrices: any, indexes: any, matrixWorld: any, options?: {}): Ammo.btConvexHullShape[];
export function createTriMeshShape(vertices: any, matrices: any, indexes: any, matrixWorld: any, options?: {}): Ammo.btConvexTriangleMeshShape | Ammo.btBvhTriangleMeshShape | null;
export function createHeightfieldTerrainShape(options?: {}): Ammo.btHeightfieldTerrainShape | null;
export function iterateGeometries(root: any, options: any, cb: any): void;
//# sourceMappingURL=three-to-ammo.d.ts.map