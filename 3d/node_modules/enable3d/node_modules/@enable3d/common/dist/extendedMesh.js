"use strict";
/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtendedMesh = void 0;
const index_1 = require("@enable3d/three-wrapper/dist/index");
class ExtendedMesh extends index_1.Mesh {
    constructor(geometry, material) {
        super(geometry, material);
        this.vector3 = new index_1.Vector3();
        this.isGroup = false;
        this.hasBody = false;
        this.name = `object-${this.id}`;
    }
    /** Returns all values relative to the world. */
    get world() {
        return {
            theta: this.worldTheta,
            phi: this.worldPhi
        };
    }
    /** Get the theta relative to the world. */
    get worldTheta() {
        this.getWorldDirection(this.vector3);
        return Math.atan2(this.vector3.x, this.vector3.z);
    }
    /** Get the phi relative to the world. */
    get worldPhi() {
        this.getWorldDirection(this.vector3);
        return Math.acos(this.vector3.y);
    }
}
exports.ExtendedMesh = ExtendedMesh;
//# sourceMappingURL=extendedMesh.js.map