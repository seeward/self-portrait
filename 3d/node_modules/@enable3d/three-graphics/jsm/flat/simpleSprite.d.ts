/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
/// <reference types="matter-js" />
import { Texture, Sprite } from 'three';
export declare class SimpleSprite extends Sprite {
    protected _event: string;
    protected _pixelPerfect: boolean;
    private _isInteractive;
    private _depth;
    body: Matter.Body;
    setBodyPosition: (x: number, y: number) => void;
    _bodyOffset: {
        x: number;
        y: number;
    };
    width: number;
    height: number;
    protected _internalScale: {
        x: number;
        y: number;
    };
    onInputOver: () => void;
    protected _onInputOver(): void;
    onInputOut: () => void;
    protected _onInputOut(): void;
    onInputDown: () => void;
    protected _onInputDown(): void;
    set event(event: string);
    setInteractive({ pixelPerfect }?: {
        pixelPerfect?: boolean;
    }): void;
    get pixelPerfect(): boolean;
    constructor(texture: Texture, clone?: boolean);
    private _calcZ;
    getTexture(): Texture;
    setTexture(texture: Texture): void;
    get texture(): Texture;
    private _setTexture;
    setPosition(x: number, y: number): void;
    setDepth(z: number): void;
    setRotation(rotation: number): void;
    getRotation(): number;
    setScale(x: number, y?: number): void;
}
//# sourceMappingURL=simpleSprite.d.ts.map