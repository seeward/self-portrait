/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
import { SimpleSprite } from './simpleSprite';
import { Texture } from 'three';
interface Anims {
    key: string;
    rate: number;
    repeat: number;
    timeline: number[];
}
export declare abstract class ActionSprite extends SimpleSprite {
    private _eventEmitter;
    private _anims;
    protected _flipX: boolean;
    currentFrame: number | string;
    currentIndex: number;
    currentAnimation: string;
    currentFrameWidth: number;
    currentFrameHeight: number;
    interval: number;
    constructor(texture: Texture);
    /** Set the frame you want to show. */
    abstract setFrame(frame: number | string): void;
    /**
     * Set the offset of the Texture.
     * @param x A number from 0 to 1.
     * @param y A number from 0 to 1.
     */
    protected abstract offsetTexture(x: number, y: number): void;
    /**
     *  Set the size of the Frame.
     * @param width A number from 0 to 1.
     * @param height A number from 0 to 1.
     */
    protected abstract sizeFrame(width: number, height: number): void;
    /**
     * Scale the texture to the frame size.
     */
    protected abstract scaleFrame(): void;
    abstract flipX(flip: boolean): void;
    getAnimationByKey(key: string): Anims;
    private _add;
    private _stop;
    private _play;
    protected get _events(): {
        emit: (event: string) => void;
        once: (event: string, callback: Function) => void;
    };
    get anims(): {
        add: (key: string, frameOptions: {
            start?: number | undefined;
            end?: number | undefined;
            rate?: number | undefined;
            repeat?: number | undefined;
            timeline?: number[] | undefined;
        }) => void;
        play: (key: string) => {
            onComplete: (cb: Function) => void;
        };
        stop: () => void;
        setFrame: (frame: string | number) => void;
        getFrame: () => string | number;
    };
}
export {};
//# sourceMappingURL=actionSprite.d.ts.map